import static org.apache.tools.ant.taskdefs.condition.Os.*

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java'

apply from: './aspectj-plugin/aspectj.gradle'

repositories {
    mavenCentral()
    mavenRepo url:"http://maven2.javacv.googlecode.com/git/"
}

def artifactId = 'literate-groovy'
def groovyVer  = "2.1.9"
def litBuild = "0"
def all = true

group   = "sut"
version = "${groovyVer}.${litBuild}"

def aspectjVer = "1.7.4" // "1.6.12"

ext.source  = "1.5"
ext.target  = "1.5"

ext.outjar = "./dist/lit-groovy-${groovyVer}.jar"
if(all) {
    ext.outjar = "./dist/lit-groovy-all-${groovyVer}.jar"
}

configurations {
    deployables
}

dependencies{
    ajc     "org.aspectj:aspectjtools:${aspectjVer}"

    compile "org.aspectj:aspectjrt:${aspectjVer}"
    compile "org.codehaus.groovy:groovy-all:${groovyVer}"
    compile "org.pegdown:pegdown:1.2.1"

    runtime "org.aspectj:aspectjrt:${aspectjVer}"
    runtime "org.pegdown:pegdown:1.2.1"
    runtime "org.spockframework:spock-core:0.7-groovy-2.0"
    runtime "junit:junit-dep:4.11"
    runtime "org.sikuli:sikuli-api:1.0.2"
    runtime "com.googlecode.javacv:javacv:0.3"

    if(all) {
        ajInpath files("injar/groovy-all-${groovyVer}.jar")
    } else {
        ajInpath files("injar/groovy-${groovyVer}.jar")
    }
}

artifacts {
    deployables new File("${projectDir}/dist/lit-groovy-all-${groovyVer}.jar")
}

uploadDeployables {
    repositories {
        mavenDeployer {
            pom.whenConfigured { p ->
                def g = p.dependencies.find { dep -> dep.groupId == 'org.codehaus.groovy' && dep.artifactId == 'groovy-all' }
                if (g) { p.dependencies.remove(g) }
            }
            configuration = configurations.runtime
            pom.artifactId = artifactId
            repository (url: "https://api.bintray.com/maven/${userName}/maven/${artifactId}") {
                authentication(
                    userName: userName,
                    password: apiKey
                )
            }
        }
    }
}

task copyDeps(type: Copy, dependsOn: 'compileJava') {
    from(configurations.runtime) {

        if(!isFamily(FAMILY_WINDOWS)) exclude "javacv-0.3-windows-*.jar"
        if(!isFamily(FAMILY_UNIX))    exclude "javacv-0.3-linux-*.jar"
        if(!isFamily(FAMILY_MAC))     exclude "javacv-0.3-macosx-*.jar"

        exclude "groovy-all-${groovyVer}.jar"
    }
    into "./dist"
}

//
// TODO: build sikuli-script
// TODO: build sater
// to ./dist too
//